(function (t) { "use strict"; var e = navigator.serviceWorker; if (!e) return this.UpUp = null, t; var o = { "service-worker-url": "upup.sw.min.js", "registration-options": {} }, i = !1; this.UpUp = { start: function (t) { this.addSettings(t), e.register(o["service-worker-url"], o["registration-options"]).then(function (t) { i && console.log("Service worker registration successful with scope: %c" + t.scope, "font-weight: bold; color: #00f;"), (t.installing || e.controller || t.active).postMessage({ action: "set-settings", settings: o }) }).catch(function (t) { i && console.log("Service worker registration failed: %c" + t, "font-weight: bold; color: #00f;") }) }, addSettings: function (e) { "string" == typeof (e = e || {}) && (e = { content: e }), ["content", "content-url", "assets", "service-worker-url", "cache-version"].forEach(function (i) { e[i] !== t && (o[i] = e[i]) }), e.scope !== t && (o["registration-options"].scope = e.scope) }, debug: function (t) { i = !(arguments.length > 0) || !!t } } }).call(this);